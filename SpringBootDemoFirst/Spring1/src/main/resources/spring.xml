<!--beans are the objects managed by the spring framework-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--spring will create the object by default for all beans with
    singleton scope(default), but not prototype scope-->
    <!--    <bean id="alien1" class="org.example.Alien" scope="prototype">-->
    <bean id="alien1" class="org.example.Alien" autowire="byType">
        <!--    Value is used for primitive variable but for reference we need ref keyword
                and id of the bean already created   -->
        <!--        <property name="age" value="21"></property>-->
        <!--        gives error because of the sequence
                    <constructor-arg ref="lap1" type = "org.example.Laptop"/>-->
        <!--        <constructor-arg value="21" type="int"/>-->

        <!--        sequence does not matter in case of index-->
<!--        <constructor-arg ref="lap1" index="1"/>-->
<!--        <constructor-arg value="21" index="0"/>-->

        <!--        sequence matters in case of name too
                    if we do not define constructor properties
                    but works with @ConstructorProperties-->
        <!--        <constructor-arg value="21" name="age"/>-->
        <!--        <constructor-arg ref="lap1" name="lap"/>-->

                <property name="age" value="21"/>
<!--        It will prefer com1(property ref) over com in case of
autowire(byName) and property both-->
<!--                <property name="com" ref="com1"/>-->
    </bean>


    <bean id="com1" class="org.example.Laptop">
    </bean>
    <bean id="com2" class="org.example.Desktop">
    </bean>

</beans>